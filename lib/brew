#!/bin/bash

run_brew() {
  if has "brew"; then
    echo "$(tput setaf 2)Already installed Homebrew ✔︎$(tput sgr0)"
  else
    echo "Installing Homebrew..."
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi

  if has "brew"; then
    echo "Updating Homebrew..."
    brew update && brew upgrade
    [[ $? ]] && echo "$(tput setaf 2)Update Homebrew complete. ✔︎$(tput sgr0)"

    brew tap 'caskroom/cask'
    brew tap 'sanemat/font'
    brew tap 'neovim/neovim'
    brew tap 'railwaycat/emacsmacport'
    brew tap 'peco/peco'
    brew tap 'homebrew/dupes'

    local list_formulae
    local -a missing_formulae
    local -a desired_formulae=(
      'ant'
      'autoconf'
      'automake'
      'ansible'
      'aspell --lang=en'
      'bash-completion'
      'cask'
      'ctags'
      'doxygen'
      'emacs-mac'
      'ffmpeg --with-faac --with-fdk-aac --with-ffplay --with-fontconfig --with-freetype --with-frei0r --with-libass --with-libbluray --with-libcaca --with-libquvi --with-libsoxr --with-libvidstab --with-libvorbis --with-libvpx --with-opencore-amr --with-openjpeg --with-openssl --with-opus --with-rtmpdump --with-speex --with-theora --with-tools --with-x265 --with-webp'
      'fontforge'
      'gnupg'
      'ipmitool'
      'jq'
      'nkf'
      'neovim'
      'minicom'
      'openssl'
      'pandoc'
      'peco'
      'pyenv'
      'pyenv-virtualenv'
      'ricty --vim-powerline --powerline'
      'tmux'
      'wget'
      'xz'
    )

    local installed=`brew list`

    for index in ${!desired_formulae[*]}
    do
      local formula=`echo ${desired_formulae[$index]} | cut -d' ' -f 1`
      if [[ -z `echo "${installed}" | grep "^${formula}$"` ]]; then
        missing_formulae=("${missing_formulae[@]}" "${desired_formulae[$index]}")
      else
        echo "Installed ${formula}"
        [[ "${formula}" = "ricty" ]] && local installed_ricty=true
        [[ "${formula}" = "ansible" ]] && local installed_ansible=true
        [[ "${formula}" = "emacs-mac" ]] && local installed_emacs_mac=true
        [[ "${formula}" = "jq" ]] && local installed_jq=true
      fi
    done

    if [[ "$missing_formulae" ]]; then
      list_formulae=$( printf "%s " "${missing_formulae[@]}" )

      echo "Installing missing Homebrew formulae..."
      brew install $list_formulae

      [[ $? ]] && echo "$(tput setaf 2)Installed missing formulae ✔︎$(tput sgr0)"
    fi

    # post processes 
    #ln -sfv /usr/local/opt/mysql/*.plist ~/Library/LaunchAgents
    #ln -sfv /usr/local/opt/postgresql/*.plist ~/Library/LaunchAgents

    if [ -z "${installed_ansible}"  ]; then
    	brew link --overwrite ansible
    fi

    if [ -z "${installed_emacs_mac}"  ]; then
    	brew linkapps emacs-mac
    	brew link --overwrite emacs-mac
    fi

    if [ -z "${installed_jq}"  ]; then
    	brew link --overwrite jq
    fi

    if [ -z "${installed_ricty}"  ]; then
      echo "Reload fonts. This could take a while..."
      local cellar=`brew --config | grep 'HOMEBREW_CELLAR' | cut -d' ' -f 2`
      find ${cellar}/ricty/*/share/fonts/Ricty*.ttf | xargs -I % cp % ~/Library/Fonts
      fc-cache -vf
    fi

    local -a missing_formulae=()
    local -a desired_formulae=(
      'dropbox'
      'firefox'
      'google-chrome'
      'google-drive'
      'iterm2'
      'mactex'
      'slack'
      'skim'
      'vagrant'
      'virtualbox'
      'xquartz'
    )
    # cask
    local installed=`brew cask list`

    for index in ${!desired_formulae[*]}
    do
      local formula=`echo ${desired_formulae[$index]} | cut -d' ' -f 1`
      if [[ -z `echo "${installed}" | grep "^${formula}$"` ]]; then
        missing_formulae=("${missing_formulae[@]}" "${desired_formulae[$index]}")
      else
        echo "Installed ${formula}"
      fi
    done

    if [[ "$missing_formulae" ]]; then
      list_formulae=$( printf "%s " "${missing_formulae[@]}" )

      echo "Installing missing Homebrew formulae..."
      brew cask install $list_formulae

      [[ $? ]] && echo "$(tput setaf 2)Installed missing formulae ✔︎$(tput sgr0)"
    fi

    echo "Cleanup Homebrew..."
    brew cleanup
    echo "$(tput setaf 2)Cleanup Homebrew complete. ✔︎$(tput sgr0)"
    brew doctor
    echo "$(tput setaf 2)check Homebrew doctor complete. ✔︎$(tput sgr0)"

  fi
}
